package com.example.javafxproject;

import java.util.ArrayList;
import java.util.Scanner;

/*
    Name: Daniel Duran
    Date: 10/13/2024
    Course: Software Development I CEN-3024C-15339

    Class: Movie
    Class objective: This class defines what parameters a movie object needs.
                     It also contains a toString method that display all of a movie's attributes.
 */

public class Movie {
    private String title;
    private int year;
    private String director;
    private String format;
    private int ID;
    private String genre;

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public int getYear() {
        return year;
    }

    public void setYear(int year) {
        this.year = year;
    }

    public String getDirector() {
        return director;
    }

    public void setDirector(String director) {
        this.director = director;
    }

    public String getFormat() {
        return format;
    }

    public void setFormat(String format) {
        this.format = format;
    }

    public int getID() {
        return ID;
    }

    public void setID(int ID) {
        this.ID = ID;
    }

    public String getGenre() {
        return genre;
    }

    public void setGenre(String genre) {
        this.genre = genre;
    }


    public static void listMovies(ArrayList<Movie> MovieList){
        System.out.println("\n\tLISTING ALL MOVIES CURRENTLY IN DATABASE\n");

        for(int i = 0; i < MovieList.size(); i++) {
            System.out.println("\t\t\t\tMOVIE " + (i + 1) + MovieList.get(i).toString() + "\n");
        }
    }

    /*
    Method name: removeMovie
    Method purpose: This method allows users to "check out" movies by removing them from the array list.
                    Users can select whether they would like to check out a movie by its ID or its title.
    Method arguments: ArrayList
    Method return value: None
    */

    public static boolean removeMovie(ArrayList<Movie> MovieList) {
        Scanner input = new Scanner(System.in);
        int MovieID, choice;
        String title;
        boolean error = false, removed = false;

        do {
            listMovies(MovieList);
            System.out.println("\n\tCHECKING OUT MOVIE FROM DATABASE\n");

            System.out.println("\t1. Check out movie by ID");
            System.out.println("\t2. Check out movie by title");

            System.out.println("\nEnter here: ");
            choice = input.nextInt();
            input.nextLine();

            switch (choice) {
                case 1:

                    System.out.println("Enter the ID of the movie you wish to check out: ");

                    System.out.println("\nEnter here: ");
                    MovieID = input.nextInt();
                    input.nextLine();;

                    for (int i = 0; i < MovieList.size(); i++) {
                        if (MovieID == MovieList.get(i).getID()) {
                            error = false;
                            MovieList.remove(i);
                            removed = true;
                            System.out.println("Successfully checked out movie with ID of: " + MovieID);
                        } else {
                            error = true;
                            removed = false;
                        }
                    }
                    break;

                case 2:

                    System.out.println("Enter the title of the movie you wish to check out: ");

                    System.out.println("\nEnter here: ");
                    title = input.nextLine();

                    for (int i = 0; i < MovieList.size(); i++) {
                        if (title.equals(MovieList.get(i).getTitle())) {
                            error = false;
                            removed = true;
                            MovieList.remove(i);
                            System.out.println("Successfully checked out movie with title of: " + title);
                        } else {
                            error = true;
                            removed = false;
                        }
                    }

                    break;
            }

            if (error) {
                System.out.println("\tError: Movie does not exist! Please ensure your entry has correct capitalization and no misspellings.");
                System.out.println("\tPlease Try Again.");
            }
        } while(error);
        return removed;
    }

    public static void updateMovie(ArrayList<Movie> MovieList){
        Scanner input = new Scanner(System.in);
        int MovieID, choice, newID, newYear;
        String title, newTitle, newGenre, newDirector, newFormat;
        boolean error = false, error2 = false;

        do {
            listMovies(MovieList);
                System.out.println("\n\tUPDATING MOVIE FROM DATABASE\n");

            System.out.println("\t1. Select movie by ID");
            System.out.println("\t2. Select movie by title");

            System.out.println("\nEnter here: ");
            choice = input.nextInt();
            input.nextLine();

            switch (choice) {
                case 1:

                    System.out.println("Enter the ID of the movie you wish to update: ");

                    System.out.println("\nEnter here: ");
                    MovieID = input.nextInt();
                    input.nextLine();

                    for (int i = 0; i < MovieList.size(); i++) {
                        if (MovieID == MovieList.get(i).getID()) {

                            do {
                                do {
                                    error = false;
                                    System.out.println("Select which field you would like to update: ");
                                    System.out.println("1. ID");
                                    System.out.println("2. Title");
                                    System.out.println("3. Director");
                                    System.out.println("4. Year of release");
                                    System.out.println("5. Format");
                                    System.out.println("6. Genre");
                                    System.out.println("7. Exit");
                                    System.out.println("\nEnter here: ");
                                    choice = input.nextInt();
                                    input.nextLine();

                                    switch (choice) {
                                        case 1:
                                            error2 = false;
                                            System.out.println("Enter the new ID of this movie");
                                            newID = input.nextInt();
                                            input.nextLine();

                                            MovieList.get(i).setID(newID);

                                            System.out.println("\n\tNEW ID: " + MovieList.get(i).getID() + "\n");
                                            break;
                                        case 2:
                                            error2 = false;
                                            System.out.println("Enter the new Title of this movie");
                                            newTitle = input.nextLine();

                                            MovieList.get(i).setTitle(newTitle);

                                            System.out.println("\n\tNEW TITLE: " + MovieList.get(i).getTitle() + "\n");
                                            break;
                                        case 3:
                                            error2 = false;
                                            System.out.println("Enter the new Director of this movie");
                                            newDirector = input.nextLine();

                                            MovieList.get(i).setDirector(newDirector);

                                            System.out.println("\n\tNEW DIRECTOR: " + MovieList.get(i).getDirector() + "\n");
                                            break;
                                        case 4:
                                            error2 = false;
                                            System.out.println("Enter the new Year Of Release of this movie");
                                            newYear = input.nextInt();
                                            input.nextLine();

                                            MovieList.get(i).setYear(newYear);

                                            System.out.println("\n\tNEW YEAR OF RELEASE: " + MovieList.get(i).getYear() + "\n");
                                            break;
                                        case 5:
                                            error2 = false;
                                            System.out.println("Enter the new Format of this movie");
                                            newFormat = input.nextLine();

                                            MovieList.get(i).setFormat(newFormat);

                                            System.out.println("\n\tNEW FORMAT: " + MovieList.get(i).getFormat() + "\n");
                                            break;
                                        case 6:
                                            error2 = false;
                                            System.out.println("Enter the new Genre of this movie");
                                            newGenre = input.nextLine();

                                            MovieList.get(i).setGenre(newGenre);

                                            System.out.println("\n\tNEW GENRE: " + MovieList.get(i).getGenre() + "\n");
                                            break;
                                        case 7:
                                            break;
                                        default:
                                            error2 = true;
                                            System.out.println("Error: Invalid entry! Please try again.");
                                    }
                                } while (error2);
                            } while(choice != 7);
                        } if (MovieID != MovieList.get(i).getID()) {
                            error = true;
                        }
                    }
                    break;

                case 2:

                    System.out.println("Enter the title of the movie you wish to update: ");

                    System.out.println("\nEnter here: ");
                    title = input.nextLine();

                    for (int i = 0; i < MovieList.size(); i++) {
                        if (title.equals(MovieList.get(i).getTitle())) {
                            error = false;

                            do {
                                do {
                                    error = false;
                                    System.out.println("Select which field you would like to update: ");
                                    System.out.println("1. ID");
                                    System.out.println("2. Title");
                                    System.out.println("3. Director");
                                    System.out.println("4. Year of release");
                                    System.out.println("5. Format");
                                    System.out.println("6. Genre");
                                    System.out.println("7. Exit");
                                    System.out.println("\nEnter here: ");
                                    choice = 1;

                                    switch (choice) {
                                        case 1:
                                            error2 = false;
                                            System.out.println("Enter the new ID of this movie");
                                            newID = 5;

                                            MovieList.get(i).setID(newID);

                                            System.out.println("\n\tNEW ID: " + MovieList.get(i).getID() + "\n");
                                            break;
                                        case 2:
                                            error2 = false;
                                            System.out.println("Enter the new Title of this movie");
                                            newTitle = input.nextLine();

                                            MovieList.get(i).setTitle(newTitle);

                                            System.out.println("\n\tNEW TITLE: " + MovieList.get(i).getTitle() + "\n");
                                            break;
                                        case 3:
                                            error2 = false;
                                            System.out.println("Enter the new Director of this movie");
                                            newDirector = input.nextLine();

                                            MovieList.get(i).setDirector(newDirector);

                                            System.out.println("\n\tNEW DIRECTOR: " + MovieList.get(i).getDirector() + "\n");
                                            break;
                                        case 4:
                                            error2 = false;
                                            System.out.println("Enter the new Year Of Release of this movie");
                                            newYear = input.nextInt();
                                            input.nextLine();

                                            MovieList.get(i).setYear(newYear);

                                            System.out.println("\n\tNEW YEAR OF RELEASE: " + MovieList.get(i).getYear() + "\n");
                                            break;
                                        case 5:
                                            error2 = false;
                                            System.out.println("Enter the new Format of this movie");
                                            newFormat = input.nextLine();

                                            MovieList.get(i).setFormat(newFormat);

                                            System.out.println("\n\tNEW FORMAT: " + MovieList.get(i).getFormat() + "\n");
                                            break;
                                        case 6:
                                            error2 = false;
                                            System.out.println("Enter the new Genre of this movie");
                                            newGenre = input.nextLine();

                                            MovieList.get(i).setGenre(newGenre);

                                            System.out.println("\n\tNEW GENRE: " + MovieList.get(i).getGenre() + "\n");
                                            break;
                                        case 7:
                                            break;
                                        default:
                                            error2 = true;
                                            System.out.println("Error: Invalid entry! Please try again.");
                                    }
                                } while (error2);
                            } while (choice != 7);
                        } else {
                            error = true;
                        }
                    }
                    break;
            }

            if (error) {
                System.out.println("\tError: Movie does not exist! Please ensure your entry has correct capitalization and no misspellings.");
                System.out.println("\tPlease Try Again.");
            }
        } while(error);
    }

    @Override
    public String toString() {
        return  "\n\tID: " + ID +
                "\n\tTitle: " + title +
                "\n\tDirector: " + director +
                "\n\tYear of release: " + year +
                "\n\tFormat: " + format +
                "\n\tGenre: " + genre;
    }
}
